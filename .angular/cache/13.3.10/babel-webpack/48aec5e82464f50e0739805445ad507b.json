{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/inspection-api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction AddEditInspectionComponent_select_6_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r2.inspectionName);\n  }\n}\n\nfunction AddEditInspectionComponent_select_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"select\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditInspectionComponent_select_6_Template_select_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.inspectionTypeId = $event;\n    });\n    i0.ɵɵtemplate(1, AddEditInspectionComponent_select_6_option_1_Template, 2, 2, \"option\", 4);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.inspectionTypeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx_r0.inspectionTypesList$));\n  }\n}\n\nexport class AddEditInspectionComponent {\n  constructor(service) {\n    this.service = service;\n    this.id = 0;\n    this.status = \"\";\n    this.comments = \"\";\n  }\n\n  ngOnInit() {\n    this.id = this.inspection.id;\n    this.status = this.inspection.status;\n    this.comments = this.inspection.comments;\n    this.inspectionTypeId = this.inspectionTypeId;\n    this.statusList$ = this.service.getStatusList();\n    this.inspectionList$ = this.service.getInspectionList();\n  }\n\n}\n\nAddEditInspectionComponent.ɵfac = function AddEditInspectionComponent_Factory(t) {\n  return new (t || AddEditInspectionComponent)(i0.ɵɵdirectiveInject(i1.InspectionApiService));\n};\n\nAddEditInspectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEditInspectionComponent,\n  selectors: [[\"app-add-edit-inspection\"]],\n  inputs: {\n    inspection: \"inspection\"\n  },\n  decls: 7,\n  vars: 1,\n  consts: [[1, \"mb-3\"], [\"for\", \"InspectionTypeId\", 1, \"form-label\"], [\"class\", \"form-control\", \"name\", \"inspectionTypeId\", \"id\", \"inspectionTypeId\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"name\", \"inspectionTypeId\", \"id\", \"inspectionTypeId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function AddEditInspectionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"add-edit-inspection works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\")(3, \"div\", 0)(4, \"label\", 1);\n      i0.ɵɵtext(5, \"Inspection Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, AddEditInspectionComponent_select_6_Template, 3, 4, \"select\", 2);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.inspection.id == 0);\n    }\n  },\n  directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i3.NgIf, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption],\n  pipes: [i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtZWRpdC1pbnNwZWN0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"sources":["C:/Users/HP/Angular Learning/angular13-inspection-api/src/app/inspection/add-edit-inspection/add-edit-inspection.component.ts"],"names":["i0","i1","i2","i3","AddEditInspectionComponent_select_6_option_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","type_r2","$implicit","ɵɵproperty","id","ɵɵadvance","ɵɵtextInterpolate","inspectionName","AddEditInspectionComponent_select_6_Template","_r4","ɵɵgetCurrentView","ɵɵlistener","AddEditInspectionComponent_select_6_Template_select_ngModelChange_0_listener","$event","ɵɵrestoreView","ctx_r3","ɵɵnextContext","inspectionTypeId","ɵɵtemplate","ɵɵpipe","ctx_r0","ɵɵpipeBind1","inspectionTypesList$","AddEditInspectionComponent","constructor","service","status","comments","ngOnInit","inspection","statusList$","getStatusList","inspectionList$","getInspectionList","ɵfac","AddEditInspectionComponent_Factory","t","ɵɵdirectiveInject","InspectionApiService","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","decls","vars","consts","template","AddEditInspectionComponent_Template","directives","ɵNgNoValidate","NgControlStatusGroup","NgForm","NgIf","SelectControlValueAccessor","NgControlStatus","NgModel","NgForOf","NgSelectOption","ɵNgSelectMultipleOption","pipes","AsyncPipe","styles"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"src/app/service/inspection-api.service\";\r\nimport * as i2 from \"@angular/forms\";\r\nimport * as i3 from \"@angular/common\";\r\nfunction AddEditInspectionComponent_select_6_option_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"option\", 5);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const type_r2 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"value\", type_r2.id);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(type_r2.inspectionName);\r\n} }\r\nfunction AddEditInspectionComponent_select_6_Template(rf, ctx) { if (rf & 1) {\r\n    const _r4 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"select\", 3);\r\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditInspectionComponent_select_6_Template_select_ngModelChange_0_listener($event) { i0.ɵɵrestoreView(_r4); const ctx_r3 = i0.ɵɵnextContext(); return ctx_r3.inspectionTypeId = $event; });\r\n    i0.ɵɵtemplate(1, AddEditInspectionComponent_select_6_option_1_Template, 2, 2, \"option\", 4);\r\n    i0.ɵɵpipe(2, \"async\");\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.inspectionTypeId);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx_r0.inspectionTypesList$));\r\n} }\r\nexport class AddEditInspectionComponent {\r\n    constructor(service) {\r\n        this.service = service;\r\n        this.id = 0;\r\n        this.status = \"\";\r\n        this.comments = \"\";\r\n    }\r\n    ngOnInit() {\r\n        this.id = this.inspection.id;\r\n        this.status = this.inspection.status;\r\n        this.comments = this.inspection.comments;\r\n        this.inspectionTypeId = this.inspectionTypeId;\r\n        this.statusList$ = this.service.getStatusList();\r\n        this.inspectionList$ = this.service.getInspectionList();\r\n    }\r\n}\r\nAddEditInspectionComponent.ɵfac = function AddEditInspectionComponent_Factory(t) { return new (t || AddEditInspectionComponent)(i0.ɵɵdirectiveInject(i1.InspectionApiService)); };\r\nAddEditInspectionComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AddEditInspectionComponent, selectors: [[\"app-add-edit-inspection\"]], inputs: { inspection: \"inspection\" }, decls: 7, vars: 1, consts: [[1, \"mb-3\"], [\"for\", \"InspectionTypeId\", 1, \"form-label\"], [\"class\", \"form-control\", \"name\", \"inspectionTypeId\", \"id\", \"inspectionTypeId\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"name\", \"inspectionTypeId\", \"id\", \"inspectionTypeId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function AddEditInspectionComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"p\");\r\n        i0.ɵɵtext(1, \"add-edit-inspection works!\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"form\")(3, \"div\", 0)(4, \"label\", 1);\r\n        i0.ɵɵtext(5, \"Inspection Type\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(6, AddEditInspectionComponent_select_6_Template, 3, 4, \"select\", 2);\r\n        i0.ɵɵelementEnd()();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(6);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.inspection.id == 0);\r\n    } }, directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i3.NgIf, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgForOf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption], pipes: [i3.AsyncPipe], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtZWRpdC1pbnNwZWN0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"] });\r\n"]},"metadata":{},"sourceType":"module"}